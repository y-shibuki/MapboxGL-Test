@charset "UTF-8";
.map-container {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

/** ローディング画面 **/
.loader {
  /* 画面全体に表示させる */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100vw;
  height: 100vh;
  z-index: 4;
  background-color: rgb(35, 55, 75);
  /*　画面の中央に要素を表示させる設定　*/
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
}
.loader span {
  color: white;
  font-size: 20px;
}
.loader svg {
  color: white;
  animation: rotate_anime 4s linear infinite;
}
@keyframes rotate_anime {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/** 緯度・経度・ズームレベルを表示するコンポーネント **/
.DebugComponent {
  z-index: 1;
  /* 表示場所 */
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translateX(-50%);
  -webkit-transform: translateX(-50%);
  margin: 12px;
  border-radius: 4px;
  background-color: rgba(35, 55, 75, 0.9);
  color: #fff;
  padding: 6px 12px;
  font-family: monospace;
}

/** ボタン **/
.BasicButtonContainer {
  z-index: 1;
  /* 表示場所 */
  position: absolute;
  top: 0;
  right: 0;
  margin-top: 12px;
  margin-right: 50px;
  display: flex;
  flex-flow: column;
}

.BasicButton {
  width: 70px;
  height: 70px;
  margin-bottom: 5px;
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  /* ボタンっぽく */
  cursor: pointer;
  border: 2px solid rgba(35, 55, 75, 0.9);
  border-radius: 4px;
  background-color: rgba(35, 55, 75, 0.9);
  color: white;
  transition: background 0.3s;
  padding-bottom: 4px;
  /* カーソルを当てた時 */
}
.BasicButton span {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  font-size: 15px;
  line-height: 16px;
}
.BasicButton svg {
  margin-top: auto;
}
.BasicButton:hover {
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0.9);
  color: rgba(35, 55, 75, 0.9);
}

/** モーダルウィンドウ用の設定 **/
/* 下の画面を操作できないようにするオーバーレイレイヤ */
.overlay {
  /*　画面全体を覆う設定　*/
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 3;
  background-color: rgba(0, 0, 0, 0.5);
  /*　画面の中央に要素を表示させる設定　*/
  display: flex;
  align-items: center;
  justify-content: center;
  /* モーダルウィンドウのコンテンツ */
}
.overlay > div {
  z-index: 3;
  border-radius: 4px;
  background-color: rgba(35, 55, 75, 0.9);
  color: white;
  position: relative;
  width: 50%;
  padding: 1em;
  /* タイトル */
  /* 閉じるボタン */
}
.overlay > div > span {
  display: inline-block;
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 20px;
}
.overlay > div svg {
  cursor: pointer;
  position: absolute;
  top: 10px;
  right: 10px;
  transition: color 0.2s;
}
.overlay > div svg:hover {
  color: rgb(255, 140, 0);
}

/** 建物レイヤを選択するラジオボタン **/
.BuilidingLayers_RadioButtonContainer {
  border: none;
  padding: 0;
  margin: 0;
  height: 280px;
  display: flex;
  flex-flow: column;
  justify-content: space-between;
}
.BuilidingLayers_RadioButtonContainer div {
  width: 100%;
  height: 45px;
  display: flex;
  justify-content: center;
}
.BuilidingLayers_RadioButtonContainer input:checked + label {
  background: #B54A4A;
  color: #fff;
  text-shadow: 0 0 1px rgba(0, 0, 0, 0.7);
}
.BuilidingLayers_RadioButtonContainer label {
  width: 80%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  border-radius: 3px;
  outline: 1px solid rgb(180, 180, 180);
}
.BuilidingLayers_RadioButtonContainer label:hover {
  cursor: pointer;
  outline: 2px solid rgb(200, 200, 200);
}

/** オリジナルのラジオボタンやチェックボックスを作成するときに使用 **/
/* このスタイルを適用することで、視覚的に非表示にできる */
/* ラジオボタンがあることは示しつつ、視覚的には見えないという素晴らしい状態 */
.visually-hidden {
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}